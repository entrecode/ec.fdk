# ec.fdk

Lightweight SDK for entrecode APIs.
Currently supports only most common PublicAPI functions.

## Install

```sh
npm i ec.fdk
```

## Publish

0. `cd packages/ec.fdk`
1. bump version in `packages/ec.fdk/package.json`
2. run `pnpm readme`
3. commit + push
4. run `pnpm publish`

# API

Start by calling `sdk` with your environment (`stage` | `live`), then method chain your way to success:

```js
import { sdk } from "ec.fdk";

sdk("stage") // choose stage environment
.dm("83cc6374") // select datamanager via short id
.model("muffin") // select model muffin
.entries() // load entry list
.then(list => {
  console.log(list);
})
```

You can also reuse parts of the chain with variables:

```js
// we want to do stuff with model muffin here
const muffin = sdk("stage").dm("83cc6374").model("muffin");
// load entry list
const { items } = await muffin.entries();
// edit first entry
await muffin.editEntry(items[0].id, { name: "edit!" });
// delete second entry
await muffin.deleteEntry(items[1].id);
// create a new muffin
await muffin.createEntry({ name: "new muffin" });
```

Now what follows is the autogenerated doc from source:

{{#module name="api"}}
{{>members}}
{{/module}}